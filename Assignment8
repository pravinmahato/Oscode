//Write a program to implement disk scheduling algorithms FIFO, SSTF, SCAN, C-SCAN
#include<stdio.h>
#include<stdlib.h>

int abs(int n){
  return n < 0 ? -n : n;
}

void sort(int arr[],int n){
    int i,j,temp;
    for(int i=0;i<n-1;i++){
        for(int j;j<n-i-1;j++){
           if(arr[i] > arr[j +1]){
               temp = arr[j+1];
               arr[j +1] = temp;
           }
        }
    }
}
void fcfs(int data[],int n,int head){
    int movement=0,current=head;
    printf("seek sequence:%d",current);
    for(int i=0;i<n;i++){
        movement += abs(current - data[i]);
        current = data[i];
        printf("seek ->%d",current);
    }
printf("movement %d",movement);
}

void sstf(int data[],int n,int head){
    int seen[100]={0},movement=0,current=head;
    printf("seek sequence:%d",current);
     for(int i=0;i<n;i++){
         int index= -1, min=9999;
         for(int j=0;j<n;j++){
             if(!seen[j] && abs(current - data[i]) < min){
                 min =abs(current - data[j]);
                index=j;
             }
         }
        movement +=min;
        current=data[index];
        seen[index]=1;
        printf("->%d",current);
     }
     printf("movement %d\n",movement);
}

   void scan(int data[],int n,int head,int disk_size){
       int movement=0,right[100],left[100],l=0,r=0,current=head;
      for(int i=0;i<n;i++){
          if(data[i] <head)
             left[l++] =data[i];
      else
        right[r++] = data[i];
      }
     sort(left,l);
     sort(right,r);
     printf("\n scan seek sequence:%d",current);
     
     for(int i=0;i<r;i++){
         movement +=abs(current -right[i]);
         current =right[i];
         printf("-> %d",current);
     }
     if(current !=disk_size - 1){
         movement =abs(current - (disk_size - 1));
         current =disk_size -1;
         printf("->%d",current);
     }
     
     for(int i=l-1;i>=0;i--){
         movement += abs(current - left[i]);
         current =left[i];
         printf("->%d",current);
     }
     printf("movement:%d",movement);
   }



int main(){
    int data[100],n,head,disk_size;
    printf("enter the number of disk required:\n");
    scanf("%d",&n);
    
    printf("enter the number of disk request queue:\n");
    for(int i=0;i<n;i++){
        scanf("%d",&data[i]);
    }
    printf("enter the number of head at inital:\n");
    scanf("%d",&head);
    
    fcfs(data,n,head);
    sstf(data,n,head);
    scan(data,n,head,disk_size);
    
    return 0;
}
